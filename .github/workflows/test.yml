name: Tests

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        django-version: ['4.2', '5.0', '5.1']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install "Django>=${{ matrix.django-version }},<${{ matrix.django-version }}.99"
        pip install pytest pytest-django pytest-cov
        pip install -e .

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 logmancer/ --max-line-length=100 --ignore=E203,W503,F401

    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: tests.settings
      run: |
        python -m pytest tests/ -v --cov=logmancer

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build
        
    - name: Check package
      run: |
        pip install twine
        python -m twine check dist/*
  
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install build tools
        run: pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
